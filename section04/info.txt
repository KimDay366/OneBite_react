* React 란?
- Meta(Facebook)이 개발한 오픈소스 Javascript 라이브러리
- 대규모 웹 서비스의 UI를 더 편하게 개발하기 위해 만들어진 기술
- 넷플릭스, 페이스북, 인스타그램, 노션을 만든 서비스 기술
- 국내, 해외에서 모두 가장 많이 사용하고 있는 웹 프레임 워크

* React의 기술적인 특징
1. 컴포넌트(=구현해야 하는 요소) 를 기반으로 UI를 표현한다
    = header.js / main.js / footer.js 등등 각 구성 / 요소 별로 컴포넌트(모듈화)해서 개발이 가능함
    = 각 페이지의 요소를 "컴퍼넌트"화 해서 사용하기 때문에, 여러 페이지에서 재사용이 가능하고 수정 사항 처리도 쉽다.


2. 화면 업데이트 구현이 쉽다
    = 업데이트란? 사용자의 행동(클릭, 드래그 등)에 따라 웹페이지가 스스로 모습을 바꿔 상호작용 하는 것을 의미
    = 리엑트는 선언형 프로그래밍(= 불필요한 과정은 생략하고, 목적만 간결히 명시하는 방법),
      특정 변수의 값을 바꾸는 것 만으로도 UI의 변형이 가능하다
    

3. 화면 업데이트가 빠르게 처리된다.
    = 자바스크립트를 수정하는 경우, DOM → Render Tree → Layout(Reflow : Layout 다시 시작) → Painting(Repaint : Painting 다시 시작) 과정을 거침
    = Reflow / Repaint은 오래 걸리는 작업이므로, DOM을 한번만 수정 해야 함
    = React는 자동으로 DOM 수정을 1번만 수정하게 만들어져서 업데이트에 대한 처리가 빠름
      (Virtual DOM에 수정사항을 모두 저장했다가 한번에 DOM에 적용함)


* 선언형 프로그래밍 : 원하는 목적만 간결히 말함 = (알아서 만드시고) 토마토 파스타 주세요
  명령형 프로그래밍 : 구체적인 과정을 적어야함 = 파스타 면은 100g만 넣으시고, 물은 500ml해서 9분간 끓이세요, 그 이후에 면을 건져.. 해서 토마토 파스타 주세요 


* 브라우저의 렌더링 과정(Critical Rendering Path)

    [1단계] HTML => DOM(Document Object Model)로 변환(요소들의 배치, 모양, 위치 정보)
            CSS => CSSOM로 변환(요소들의 스타일 관련 정보)

    [2단계] Render Tree: 1단계의 2가지 변환 정보를 합쳐서 웹 페이지의 청사진을 만듦

    [3단계] Layout : 요소의 배치를 잡는 작업

    [4단계] Painting : 실제로 화면에 그려내는 과정

* React Application이란?
React를 사용해 만든 웹 서비스를 React App을 의미함

* React APP 생성하기
1. Node JS 패키지 생성
2. React 라이브러리 설치
3. 기타 도구 설치 및 설정 = Vite, 차세대 프론트엔드 개발 툴, 기본 설정이 적용된 React APP 생성 기능(react 공식 문서에서도 권장하고 있음)

