페이지 라우팅이란 ?
    : 경로에 따라 알맞은 페이지를 렌더링 하는 과정
    예 - service.com/setting => 'setting' 페이지 렌더링

    [ MPA (Multi Page Application) ]
    : 애초에 서버가 여려개의 페이지를 가지고 있어, 브라우저의 요청에 따라 해당 페이지를 출력
    : 페이지 이동이 쾌적하지 못함(헤더같이 모두 동일하게 사용하는 섹션도 리렌더링 이뤄지므로 데이터를 오래 불러와야함)

    + 서버 사이드 렌더링 : 서버에서 페이지를 출력한다는 뜻
                      : MPA는 서버 내부의 방식을 말하고, 해당 방식은 브라우저와 서버 사이의 방식을 말함

    => 많은 서비스가 사용하는 전통 방식 : MPA + 서버 사이드 렌더링


    [ SPA (Single Page Application) ]
    : 페이지의 이동이 매끄럽고 효율적임
    : 다수의 사용자가 접속해도 크게 상관 없음

    리엑트로 작업 시 : index.html 하나만 서버에 가지고 있고, 나머지 섹션 영역은 JS File로 가지고 있음
                    -> 클라이언트(브라우저)의 요청에 따라 JS Files을 Bundling(묶다, VITE 역할)하여 
                    -> 최종적으로 사용자에게는 Bundle JS File 1개가 소속 된 index.html이 보여짐
    
    + 클라이언트 사이드 렌더링 : 이미 클라이언트에 React App(Bundle JS File)로 다 내보냈기에, 
                              서버를 거치지 않고, 클라이언트 단에서 필요한 섹션만 리렌더링 하여 화면에 표기함




=====================================================================================================

[ React Router ]
: npmjs.com에 등록되어 있는 라이브러리
: 대다수의 리액트 앱이 사용하고 있는 대표격 라이브러리


=====================================================================================================

동적 경로(Dynamic Segments)란?
    : ~/product/1 , ~/product/2 , ~/product/3 ... 에서 상품의 Id를 뜻하는 "1,2,3"과 같은 동적 데이터를 포함하고 있는 경로
    
    - URL Parameter : / 뒤에 아이템의 id를 명시 - ~/product/45187745
                      아이템의 ID등 변경되지 않는 값을 주소로 명시하기 위해 사용됨
                      => useParams 훅 사용

    - Query String : ? 뒤에 변수명과 값 명시 - ~/search?q=itemname
                      : 검색어 등의 자주 변경되는 값을 주소로 명시하기 위해 사용됨
                      => useSearchParams