웹 스토리지 
    : web storage, 웹 브라우저의 내장 DB (일종의 데이터 베이스)
    : 별도의 프로그램/라이브러리 설치 필요 없음
    : 그냥 자바스크립트 내장함수 만으로 접근 가능

    - 값을 저장 : localStorage.setItem(key,value)
    - 값을 꺼냄 : localStorage.getItem(key)

    - session storage : 브라우저 탭 별로 데이터 보관, 탭이 종료되기 전에는 데이터 유지(새로고침 가능), 탭이 종료되면 데이터 삭제
    - local storage : 사이트 주소별로 데이터 보관, 사용자가 직접 삭제하기 전까지 데이터를 거의 영구적으로 보관


[local storage에 데이터를 보관/관리하는 방법] 
    개발자 창 Application > Storage > Local storage > 본인의 url 에 저장 된 데이터 확인 가능

 - 값을 저장할 때 문자열로 저장되기 때문에 객체를 저장해도 Object 라는 단어로만 저장 됨 
    => localStorage.setItem('test2', JSON.stringify({key:value, key...}))
 
 - 값을 가져 올 때도 문자열로 가져오기 때문에 객체를 불러 올 때에 특정 메서드 사용
    => JSON.parse(localStorage.getItem('test2'))
        단, JSON.parse()로 가져오는 값이 undefined/null인 경우 치명적인 오류가 발생하므로 주의 

 - 값을 삭제 할 경우 : localStorage.removeItem('test');

            
==================================================================================

[배포 준비하기] 
    1. 페이지 타이틀 : 웹 브라우저 탭에 표시되는 페이지의 제목
    2. favicon : 브라우저 탭에 표시되는 작은 아이콘
    3. 오픈 그래프(OG, Open Graph) : 웹사이트의 링크를 공유할 때 썸네일 / 제목 등의 정보를 노출하는 것
    4. 프로젝트 빌드 : 빌드 시 문제 없는지 확인!

[배포하기]
    : 24시간, 365일 접속 가능하게 제공하는것
    : 서버 컴퓨터를 구축하면 좋지만 방화벽 / 보안 설정, 모니터링, 백업, 무정전 전원 공급 등 신경 쓸 게 많음
        => 클라우드 서버를 사용하여 일부 공간을 임대하여 배포 진행

        vercel : 프론트엔드 개발자를 위한 클라우드 서비스, next.js를 개발한 업체

